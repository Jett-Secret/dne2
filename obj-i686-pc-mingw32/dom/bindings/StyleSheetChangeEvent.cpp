/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* vim:set ts=2 sw=2 sts=2 et cindent: */
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

/* THIS FILE IS AUTOGENERATED FROM StyleSheetChangeEvent.webidl BY Codegen.py - DO NOT EDIT */

#include "EventBinding.h"
#include "StyleSheetChangeEvent.h"
#include "StyleSheetChangeEventBinding.h"
#include "js/GCAPI.h"
#include "mozilla/StyleSheet.h"
#include "mozilla/dom/Nullable.h"
#include "mozilla/dom/PrimitiveConversions.h"
#include "mozilla/dom/StyleSheetChangeEvent.h"

namespace mozilla {
namespace dom {


NS_IMPL_CYCLE_COLLECTION_CLASS(StyleSheetChangeEvent)

NS_IMPL_ADDREF_INHERITED(StyleSheetChangeEvent, Event)
NS_IMPL_RELEASE_INHERITED(StyleSheetChangeEvent, Event)

NS_IMPL_CYCLE_COLLECTION_TRAVERSE_BEGIN_INHERITED(StyleSheetChangeEvent, Event)
  NS_IMPL_CYCLE_COLLECTION_TRAVERSE(mStylesheet)
NS_IMPL_CYCLE_COLLECTION_TRAVERSE_END

NS_IMPL_CYCLE_COLLECTION_TRACE_BEGIN_INHERITED(StyleSheetChangeEvent, Event)
NS_IMPL_CYCLE_COLLECTION_TRACE_END

NS_IMPL_CYCLE_COLLECTION_UNLINK_BEGIN_INHERITED(StyleSheetChangeEvent, Event)
  NS_IMPL_CYCLE_COLLECTION_UNLINK(mStylesheet)
NS_IMPL_CYCLE_COLLECTION_UNLINK_END

NS_INTERFACE_MAP_BEGIN_CYCLE_COLLECTION_INHERITED(StyleSheetChangeEvent)
NS_INTERFACE_MAP_END_INHERITING(Event)

StyleSheetChangeEvent::StyleSheetChangeEvent(mozilla::dom::EventTarget* aOwner)
  : Event(aOwner, nullptr, nullptr)
{
}

StyleSheetChangeEvent::~StyleSheetChangeEvent()
{
}

StyleSheetChangeEvent*
StyleSheetChangeEvent::AsStyleSheetChangeEvent()
{
  return this;
}

JSObject*
StyleSheetChangeEvent::WrapObjectInternal(JSContext* aCx, JS::Handle<JSObject*> aGivenProto)
{
  return StyleSheetChangeEventBinding::Wrap(aCx, this, aGivenProto);
}

already_AddRefed<StyleSheetChangeEvent>
StyleSheetChangeEvent::Constructor(mozilla::dom::EventTarget* aOwner, const nsAString& aType, const StyleSheetChangeEventInit& aEventInitDict)
{
  RefPtr<StyleSheetChangeEvent> e = new StyleSheetChangeEvent(aOwner);
  bool trusted = e->Init(aOwner);
  e->InitEvent(aType, aEventInitDict.mBubbles, aEventInitDict.mCancelable);
  e->mStylesheet = aEventInitDict.mStylesheet;
  e->mDocumentSheet = aEventInitDict.mDocumentSheet;
  e->SetTrusted(trusted);
  e->SetComposed(aEventInitDict.mComposed);
  return e.forget();
}

already_AddRefed<StyleSheetChangeEvent>
StyleSheetChangeEvent::Constructor(const GlobalObject& aGlobal, const nsAString& aType, const StyleSheetChangeEventInit& aEventInitDict, ErrorResult& aRv)
{
  nsCOMPtr<mozilla::dom::EventTarget> owner = do_QueryInterface(aGlobal.GetAsSupports());
  return Constructor(owner, aType, aEventInitDict);
}

StyleSheet*
StyleSheetChangeEvent::GetStylesheet() const
{
  return mStylesheet;
}

bool
StyleSheetChangeEvent::DocumentSheet() const
{
  return mDocumentSheet;
}


} // namespace dom
} // namespace mozilla
