//
// Automatically generated by ipdlc.
// Edit at your own risk
//


#include "mozilla/plugins/PStreamNotify.h"

namespace mozilla {
namespace plugins {
namespace PStreamNotify {

nsresult
CreateEndpoints(
        base::ProcessId aParentDestPid,
        base::ProcessId aChildDestPid,
        mozilla::ipc::Endpoint<mozilla::plugins::PStreamNotifyParent>* aParent,
        mozilla::ipc::Endpoint<mozilla::plugins::PStreamNotifyChild>* aChild)
{
    return mozilla::ipc::CreateEndpoints(mozilla::ipc::PrivateIPDLInterface(), aParentDestPid, aChildDestPid, PStreamNotifyMsgStart, PStreamNotifyMsgStartChild, aParent, aChild);
}
bool
Transition(
        mozilla::ipc::Trigger trigger,
        State* next)
{
    State from = (*(next));
    switch (from) {
    case __Null:
    case __Error:
        if ((Msg___delete____ID) == ((trigger).mMessage)) {
            (*(next)) = __Dead;
            return true;
        }
        return (__Null) == (from);
    case __Dead:
        mozilla::ipc::LogicError("__delete__()d actor");
        return false;
    case __Dying:
        mozilla::ipc::LogicError("__delete__()d (and unexpectedly dying) actor");
        return false;
    default:
        mozilla::ipc::LogicError("corrupted actor state");
        return false;
    }
}
IPC::Message*
Msg_RedirectNotifyResponse(int32_t routingId)
{
    return new IPC::Message(routingId, Msg_RedirectNotifyResponse__ID, IPC::Message::NOT_NESTED, IPC::Message::NORMAL_PRIORITY, IPC::Message::COMPRESSION_NONE, "PStreamNotify::Msg_RedirectNotifyResponse");
}
IPC::Message*
Msg_RedirectNotify(int32_t routingId)
{
    return new IPC::Message(routingId, Msg_RedirectNotify__ID, IPC::Message::NOT_NESTED, IPC::Message::NORMAL_PRIORITY, IPC::Message::COMPRESSION_NONE, "PStreamNotify::Msg_RedirectNotify");
}
IPC::Message*
Msg___delete__(int32_t routingId)
{
    return new IPC::Message(routingId, Msg___delete____ID, IPC::Message::NOT_NESTED, IPC::Message::NORMAL_PRIORITY, IPC::Message::COMPRESSION_NONE, "PStreamNotify::Msg___delete__");
}
IPC::Message*
Reply___delete__(int32_t routingId)
{
    return new IPC::Message(routingId, Reply___delete____ID, IPC::Message::NOT_NESTED, IPC::Message::NORMAL_PRIORITY, IPC::Message::COMPRESSION_NONE, "PStreamNotify::Reply___delete__");
}

} // namespace PStreamNotify
} // namespace plugins
} // namespace mozilla
