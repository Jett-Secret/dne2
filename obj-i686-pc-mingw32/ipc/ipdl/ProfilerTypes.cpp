//
// Automatically generated by ipdlc.
// Edit at your own risk
//


#include "mozilla/ProfilerTypes.h"


//-----------------------------------------------------------------------------
// Method definitions for the IPDL type |struct ProfilerInitParams|
//
namespace mozilla {
MOZ_IMPLICIT ProfilerInitParams::ProfilerInitParams() :
    enabled_(),
    entries_(),
    interval_()
{
    Init();
}

ProfilerInitParams::~ProfilerInitParams()
{
}

auto ProfilerInitParams::operator==(const ProfilerInitParams& _o) const -> bool
{
    if ((!((enabled()) == ((_o).enabled())))) {
        return false;
    }
    if ((!((entries()) == ((_o).entries())))) {
        return false;
    }
    if ((!((interval()) == ((_o).interval())))) {
        return false;
    }
    if ((!((threadFilters()) == ((_o).threadFilters())))) {
        return false;
    }
    if ((!((features()) == ((_o).features())))) {
        return false;
    }
    return true;
}

auto ProfilerInitParams::Init() -> void
{
}

auto ProfilerInitParams::Assign(
        const bool& _enabled,
        const uint32_t& _entries,
        const double& _interval,
        const nsTArray<nsCString>& _threadFilters,
        const nsTArray<nsCString>& _features) -> void
{
    enabled_ = _enabled;
    entries_ = _entries;
    interval_ = _interval;
    threadFilters_ = _threadFilters;
    features_ = _features;
}

} // namespace mozilla
